# Default values for clowder.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: clowder
  name: clowder
  #tag: 1.7.3
  tag: test
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

clowder:
  smtp:
    mock: false
    host: smtp.ncsa.illinois.edu

user:
  enabled: true
  #username:
  password: secret
  email: admin@example.com
  firstname: Admin
  lastname: User
  admin: true

service:
  ## ServiceType
  ## ref: https://kubernetes.io/docs/user-guide/services/#publishing-services---service-types
  type: ClusterIP
  ## Optional static port assignment for service type NodePort.
  # nodePort: 30000
  port: 9000

## ----------------------------------------------------------------------
## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  ##
  # existingClaim:

  ## The path the volume will be mounted at, useful when using different
  ## PostgreSQL images.
  ##
  mountPath: /home/clowder/data

  ## PostgreSQL data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  #storageClass: "-"
  accessModes:
    - ReadWriteOnce
  size: 20Gi
  annotations: {}

# ----------------------------------------------------------------------
# Configure the ingress object to hook into existing infastructure
# ref : http://kubernetes.io/docs/user-guide/ingress/
#
ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: "nginx"
  host: kooper.dyn.ncsa.edu
  path: /
  tls:
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

  # should clowder assume SSL connections
  ssl: false

# ----------------------------------------------------------------------
monitor:
  enabled: true

  service:
    ## ServiceType
    ## ref: https://kubernetes.io/docs/user-guide/services/#publishing-services---service-types
    type: ClusterIP
    ## Optional static port assignment for service type NodePort.
    # nodePort: 30000
    port: 9999

  ingress:
    enabled: true
    annotations: {}
      # kubernetes.io/ingress.class: "nginx"
    host: kooper.dyn.ncsa.edu
    path: /monitor/
    tls:
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

# ----------------------------------------------------------------------
extractors:
  # list of extractors to be installed. Each extractor should have the 
  # following fields:
  #   enabled: true/false - should the extractor be installed
  #   image: dokeer/image:tag - the extractor docker image
  #   replicaCount: number - the number of this extractor to install
  file-digest:
    enabled: true
    image: clowder/extractors-digest:latest
    replicaCount: 1
  image-preview:
    enabled: true
    image: clowder/extractors-image-preview:latest
    replicaCount: 1
  image-metadata:
    enabled: true
    image: clowder/extractors-image-metadata:latest
    replicaCount: 1
  audio-preview:
    enabled: true
    image: clowder/extractors-audio-preview:latest
    replicaCount: 1
  pdf-preview:
    enabled: true
    image: clowder/extractors-pdf-preview:latest
    replicaCount: 1
  video-preview:
    enabled: true
    image: clowder/extractors-video-preview:latest
    replicaCount: 1

# ----------------------------------------------------------------------
# clowder requires mongodb to be able to run
#
mongodb:
  # either mongodb is installed as part of this chart, or you need to
  # specify the mongodb uri
  enabled: true
  #uri: mongobd://server:27017/database

  # clowder does not support passwords
  usePassword: false

  # clowder works with 3.6 only
  image:
   tag: 3.6

  mongodbSystemLogVerbosity: 5
  mongodbDisableSystemLog: true

# ----------------------------------------------------------------------
# clowder uses rabbitmq to distribute messages, this is optional, but
# highly recommended. If you want to use extractors you need to install
# rabbitmq
#
rabbitmq:
  # either rabbitmq is installed as part of this chart, or you need to
  # specify the rabbitmq uri
  enabled: true
  #uri: amqp://username:password@server/database

  rabbitmq:
    username: guest
    password: guest
    # extraConfiguration: |-
    #   management.path_prefix = /rabbitmq/

  ingress:
    enabled: false
    hostName: kooper.dyn.ncsa.edu
    path: /rabbitmq/

# ----------------------------------------------------------------------
# clowder uses rabbitmq to distribute messages, this is optional, but
# highly recommended. If you want to use extractors you need to install
# rabbitmq
#
elasticsearch:
  enabled: false
  
# ----------------------------------------------------------------------
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## Hook Affinity
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
hooks:
  affinity: {}
